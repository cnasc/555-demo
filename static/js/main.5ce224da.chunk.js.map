{"version":3,"sources":["Bubble.js","Conversation.js","Pages.js","serviceWorker.js","index.js"],"names":["Bubble","active","who","className","Conversation","title","description","isMuted","bubbles","key","pages","style","div","Pages","useState","index","set","onClick","useCallback","state","transitions","useTransition","p","from","opacity","transform","enter","leave","useEffect","interval","setInterval","length","clearInterval","map","item","props","Page","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","data-device","data-orientation","data-color","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5ce224da.chunk.js","sourcesContent":["import React from 'react';\nimport './bubble.css';\n\nexport function Bubble({ active, who }) {\nreturn <div className={`bubble ${active ? 'active' : ''} ${who}`}>{who}</div>\n}","import React from 'react';\nimport { Bubble } from './Bubble';\nimport { FaMicrophone, FaMicrophoneSlash, FaThumbsDown, FaThumbsUp } from 'react-icons/fa';\nimport './conversation.css';\n\nexport default function Conversation({\n    title,\n    description,\n    isMuted,\n}) {\n    \n    const bubbles = [\n        <Bubble key=\"you\" who=\"you\" active={!isMuted} />,\n        <Bubble key=\"them\" who=\"them\" active={isMuted} />,\n    ]\n\n    return (\n        <div className=\"conversation-wrapper\">\n            <h1>{title}</h1>\n            <p>{description}</p>\n            <div className=\"bubble-row\">\n                {bubbles}\n            </div>\n            <div className=\"icon-row\">\n                <div className=\"icon red\">\n                    <FaThumbsDown />\n                </div>\n                <div className=\"icon green\">\n                    <FaThumbsUp />\n                </div>\n            </div>\n            <div className=\"icon-row\">\n                {isMuted && (\n                    <div className=\"disabled-icon\"><FaMicrophoneSlash /></div>\n                )}\n                {!isMuted && (\n                    <div className=\"icon orange\"><FaMicrophone /></div>\n                )}\n            </div>\n        </div>\n    )\n}","import React, { useState, useCallback, useEffect } from 'react'\nimport { useTransition, animated } from 'react-spring'\nimport './pages.css';\nimport Conversation from './Conversation';\n\nconst pages = [\n    ({ style }) => {\n        return (\n            <animated.div className=\"a-page\" style={{ ...style }}>\n                <Conversation\n                    isMuted\n                    title=\"Pizza Toppings\"\n                    description=\"Does pineapple belong on pizza?\"\n                />\n            </animated.div>\n        );\n    },\n    ({ style }) => {\n        return (\n            <animated.div className=\"a-page\" style={{ ...style }}>\n                <Conversation\n                    title=\"Ohayō Gozaimasu!\"\n                    description=\"Practice your Japanese language skills. Ganbatte!\"\n                />\n            </animated.div>\n        );\n    },\n    ({ style }) => {\n        return (\n            <animated.div className=\"a-page\" style={{ ...style }}>\n                <Conversation\n                    isMuted\n                    title=\"Flame of Thrones\"\n                    description=\"Let's talk about how GoT ended.\"\n                />\n            </animated.div>\n        );\n    },\n    ({ style }) => {\n        return (\n            <animated.div className=\"a-page\" style={{ ...style }}>\n                <Conversation\n                    title=\"Flying Solo\"\n                    description=\"Share your travel tips, recommended destinations, and more!\"\n                />\n            </animated.div>\n        );\n    },\n]\n\nexport default function Pages() {\n    const [index, set] = useState(0)\n    const onClick = useCallback(() => set(state => (state + 1) % 3), [])\n    const transitions = useTransition(index, p => p, {\n        from: { opacity: 0, transform: 'translate3d(100%,0,0)' },\n        enter: { opacity: 1, transform: 'translate3d(0%,0,0)' },\n        leave: { opacity: 0, transform: 'translate3d(-50%,0,0)' },\n    })\n    useEffect(() => {\n        const interval = setInterval(() => {\n            const newIndex = (index + 1) % pages.length;\n            set(newIndex)\n        }, 3500);\n\n        return () => clearInterval(interval);\n    });\n    return (\n        <div className=\"page\" onClick={onClick}>\n            {transitions.map(({ item, props, key }) => {\n                const Page = pages[item]\n                return <Page key={key} style={props} />\n            })}\n        </div>\n    )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Pages from './Pages';\nimport './index.css';\nimport './html5-device-mockups/dist/device-mockups.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"device-wrapper\">\n      <div className=\"device\" data-device=\"iPhoneX\" data-orientation=\"portrait\" data-color=\"black\">\n        <div className=\"screen\">\n          <div className=\"gradient-background\">\n            <Pages />\n          </div>\n        </div>\n      </div>\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}